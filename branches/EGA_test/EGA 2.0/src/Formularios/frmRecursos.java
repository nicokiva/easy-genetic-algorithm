/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;
import Methods.*;
import configuration.*;
import helpers.*;
import java.io.File;
import java.util.ArrayList;

/**
 *
 * @author Triton
 */
public class frmRecursos extends javax.swing.JInternalFrame {
    private MethodsType _mtMethodsType = new MethodsType();
    private boolean deleted = false;
    private boolean modified = false;
    private Integer _intID;

    MDI frmParent;
    ArrayList<Method> arrMethods = new ArrayList<Method>();
    Paths paths = new Paths();
    file_handler fh = new file_handler();
    Object[][] _objMethods;
    String[] _strColumns = {"CODIGO", "TIPO", "NOMBRE", "DESCRIPCION", "RUTA", "CREADO", "MODIFICADO", "AUTOR", "EXISTE"};

    public frmRecursos() {
        initComponents();
        FillResourcesTable();
    }
    
    public frmRecursos(MDI frmParent, Integer intSolutionID) {
        initComponents();
        this._intID = intSolutionID;
        this.frmParent = frmParent;
        FillResourcesTable();
    }
    
    private void FillResourcesTable(){
        ArrayList<Object[]> objMethods = new ArrayList<>();
        
        data_type_converter dtc = new data_type_converter();
        tblResources.removeAll();
        for (String[] strMethodType : this._mtMethodsType.arrMethodsType){
            String strType = strMethodType[2];
            fh.setPathFileToRead(strMethodType[1]);
            if (fh.ReadBinary()){
                dtc.setByteText(fh.getByteText());
                dtc.fromByteToStringList();
               
                ArrayList<ArrayList<String>> strArrMethods = dtc.getStrArrText();
                for (ArrayList<String> strMethod : strArrMethods){
                    String strAuthor = strMethod.size() > 8 ? strMethod.get(8) : "";
                    Method met = new Method(strMethod.get(0), strMethod.get(1), strMethod.get(3), strMethod.get(2), Boolean.getBoolean(strMethod.get(4)), strMethod.get(5), strMethod.get(6), strMethod.get(7), strAuthor);
                    met.setType(strType);
                    met.SetFirstLetterFromType();
                    this.arrMethods.add(met);
                    
                    String strLocationFile = strMethod.get(5).toString();
                    int length = paths.strHome.length();
                    if (strLocationFile.length() > length && (strLocationFile.substring(0, length)).equals(paths.strHome)){
                        strLocationFile = strLocationFile.substring(length + 1);
                    }
                    
                    File _file = new File(strLocationFile);
                    //String strImage = _file.exists() ? "C:\\Users\\Nicolas\\Desktop\\EGA\\EGA 2.0\\res\\tick.png" : "C:\\Users\\Nicolas\\Desktop\\EGA\\EGA 2.0\\res\\x.png";
                    
                    String strExiste = _file.exists() ? "Alcanzable" : "No alcanzable";
                    
                    Object[] objMethod = {strMethod.get(0), strType, strMethod.get(1), strMethod.get(3), strLocationFile, strMethod.get(6), strMethod.get(7), strAuthor, strExiste};
                    objMethods.add(objMethod);   
                }
            }
        }

        this.completeGrid(objMethods);
    }
    
    private void completeGrid(ArrayList<Object[]> objMethods){
        int intTotalMethods = objMethods.size();
        this._objMethods = new Object[intTotalMethods][7];

        for (int intCounter = 0; intCounter < intTotalMethods; intCounter++){
            this._objMethods[intCounter] = objMethods.get(intCounter);
        }
        
        tblResources.setModel(new javax.swing.table.DefaultTableModel(this._objMethods, this._strColumns));
        
        /*int _totalRows = this.tblResources.getRowCount();
        
        for (int a = 0; a < _totalRows; a++){
            String strPath = this.tblResources.getValueAt(a, 4) != null ? this.tblResources.getValueAt(a, 4).toString() : "";
            File _file = new File(strPath);
            if (_file.exists()){
                //this.tblResources.setValueAt(new jPanel(new ImageIcon("tick.png").getImage()), a, 8);
            }
        }*/
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jspResources = new javax.swing.JScrollPane();
        tblResources = new javax.swing.JTable();
        btnOpenResource = new javax.swing.JButton();
        btnSaveChanges = new javax.swing.JButton();
        btnDeleteResource = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("EGA - Base de Recursos");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ICON.png"))); // NOI18N

        tblResources.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "SELECCION", "Ranking", "Elige los N mayores.", "", "12/07/2012", "13/08/2012", "Pyte", null},
                {"2", "APTITUD", "Eventos", "Para eventos.", "", "15/09/2012", "15/09/2012", null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "CODIGO", "TIPO", "NOMBRE", "DESCRIPCION", "RUTA", "CREADO", "MODIFICADO", "AUTOR", "EXISTE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblResources.getTableHeader().setReorderingAllowed(false);
        tblResources.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblResourcesKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblResourcesKeyReleased(evt);
            }
        });
        jspResources.setViewportView(tblResources);

        btnOpenResource.setText("Abrir Recurso");
        btnOpenResource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenResourceActionPerformed(evt);
            }
        });

        btnSaveChanges.setText("Guardar Cambios");
        btnSaveChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveChangesActionPerformed(evt);
            }
        });

        btnDeleteResource.setText("Eliminar Recurso");
        btnDeleteResource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteResourceActionPerformed(evt);
            }
        });

        btnExit.setText("Salir");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(btnOpenResource, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSaveChanges, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDeleteResource, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(199, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jspResources)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jspResources, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveChanges, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnOpenResource, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDeleteResource, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteResourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteResourceActionPerformed
        // TODO add your handling code here:
        Method met = this.getSelectedMethod();

        int index = 0, indexToRemove = -1;
        for (Method _arrMeth : this.arrMethods){
            if (_arrMeth.getFirstLetter().equals(met.getFirstLetter()) && Integer.parseInt(_arrMeth.getIndex()) ==  Integer.parseInt(met.getIndex())){

                File _fileToDelete = new File(met.getPath());
                if (_fileToDelete.delete()) {
                    indexToRemove = index;
                }
            }
            index++;
        }

        if (indexToRemove >= 0){
            this.arrMethods.remove(indexToRemove);
            this.deleted = true;
        }
        
        this.setResourcesTable();
    }//GEN-LAST:event_btnDeleteResourceActionPerformed

    private void setResourcesTable(){
        
        ArrayList<Object[]> objMethods = new ArrayList<Object[]>();
        
        for(Method _meth : this.arrMethods){
            Object[] objMethod = {_meth.getIndex(), _meth.getType(), _meth.getName(), _meth.getDescription(), _meth.getAlias(), _meth.getPath(), _meth.getCreated(), _meth.getModified(), _meth.getAuthor()};
            objMethods.add(objMethod);            
        }
        
        this.completeGrid(objMethods);
    }
    
    private void btnSaveChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveChangesActionPerformed
        // TODO add your handling code here:
        if (this.modified || this.deleted){
            this.arrMethods.clear();
            
            int _totalRows = this.tblResources.getRowCount();
            for (int a = 0; a < _totalRows; a++){
                String strIndex = this.tblResources.getValueAt(a, 0) != null ? this.tblResources.getValueAt(a, 0).toString() : "0";
                String strType = this.tblResources.getValueAt(a, 1) != null ? this.tblResources.getValueAt(a, 1).toString() : "SELECCIÓN";
                String strName = this.tblResources.getValueAt(a, 2) != null ? this.tblResources.getValueAt(a, 2).toString() : "";
                String strDescription = this.tblResources.getValueAt(a, 4) != null ? this.tblResources.getValueAt(a, 4).toString() : "";
                String strAlias = this.tblResources.getValueAt(a, 3) != null ? this.tblResources.getValueAt(a, 3).toString() : "";
                String strPath = this.tblResources.getValueAt(a, 5) != null ? this.tblResources.getValueAt(a, 5).toString() : "";
                String dateCreated = this.tblResources.getValueAt(a, 6) != null ? this.tblResources.getValueAt(a, 6).toString() : "";
                String dateModified = this.tblResources.getValueAt(a, 7) != null ? this.tblResources.getValueAt(a, 7).toString() : "";
                String strAuthor = this.tblResources.getValueAt(a, 8) != null ? this.tblResources.getValueAt(a, 8).toString() : "";
                
                Method _met = new Method(strIndex, strName, strDescription, strAlias, true, strPath, dateCreated, dateModified, strAuthor);
                _met.setType(strType);
                this.arrMethods.add(_met);
            }
            this.storeInDB();
            this.deleted = false;
            this.modified = false;
        }
    }//GEN-LAST:event_btnSaveChangesActionPerformed

    private void storeInDB(){
        ArrayList<Method> metSelection = new ArrayList<>();
        ArrayList<Method> metMutation = new ArrayList<>();
        ArrayList<Method> metCrossing = new ArrayList<>();
        ArrayList<Method> metStop = new ArrayList<>();
        ArrayList<Method> metInform = new ArrayList<>();
        ArrayList<Method> metFunctionAptitude = new ArrayList<>();
        ArrayList<Method> metHelper = new ArrayList<>();
        ArrayList<Method> metChromosome = new ArrayList<>();
        
        for (Method _method : this.arrMethods){
            switch(_method.getFirstLetter()){
                case "C":
                    metChromosome.add(_method);
                    break;
                case "S":
                    metSelection.add(_method);
                    break;
                case "M":
                    metMutation.add(_method);
                    break;
                case "X":
                    metCrossing.add(_method);
                    break;
                case "O":
                    metStop.add(_method);
                    break;
                case "I":
                    metInform.add(_method);
                    break;
                case "A":
                    metFunctionAptitude.add(_method);
                    break;
                case "H":
                    metHelper.add(_method);
                    break;
            }
        }
        this.storeMethods(metSelection, metMutation, metCrossing, metStop, metInform, metFunctionAptitude, metHelper, metChromosome);
    }
    
    private void storeMethods(ArrayList<Method> metSelection, ArrayList<Method> metMutation, ArrayList<Method> metCrossing, ArrayList<Method> metStop, ArrayList<Method> metInform, ArrayList<Method> metAptitudeFunction, ArrayList<Method> metHelper, ArrayList<Method> metChromosome){
        data_type_converter dtc = new data_type_converter();

        this.store(metSelection, paths.strSeleccionDB, dtc);
        this.store(metMutation, paths.strMutacionDB, dtc);
        this.store(metCrossing, paths.strCruzamientoDB, dtc);
        this.store(metStop, paths.strParoDB, dtc);
        this.store(metInform, paths.strInformeDB, dtc);
        this.store(metAptitudeFunction, paths.strAptitudDB, dtc);
        this.store(metHelper, paths.strAyudanteDB, dtc);
        this.store(metChromosome, paths.strCromosomaDB, dtc);
    }
    
    private void store(ArrayList<Method> met, String strPath, data_type_converter dtc){
        if (!met.isEmpty()){
            String _strMethods;
            
            dtc.setArrMethods(met);
            _strMethods = dtc.fromMethodToByteString();
            fh.setText(_strMethods);
            fh.setPathFileToWrite(strPath);
            fh.WriteBinary();
        }
    }
    
    private void tblResourcesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblResourcesKeyPressed
        // TODO add your handling code here:
        this.modified = true;
    }//GEN-LAST:event_tblResourcesKeyPressed

    private void tblResourcesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblResourcesKeyReleased
        // TODO add your handling code here:
        this.modified = true;
    }//GEN-LAST:event_tblResourcesKeyReleased

    private Method getSelectedMethod(){
        Integer _intIndex = Integer.parseInt(this.tblResources.getValueAt(this.tblResources.getSelectedRow(), 0).toString());
        String _strName = this.tblResources.getValueAt(this.tblResources.getSelectedRow(), 2).toString();
        String _strType = this.tblResources.getValueAt(this.tblResources.getSelectedRow(), 1).toString();
        String _strRuta = this.tblResources.getValueAt(this.tblResources.getSelectedRow(), 4).toString();
        
        Method met = new Method();
        met.setIndex(_intIndex.toString());
        met.setPath(_strRuta);
        met.setType(_strType);
        met.SetFirstLetterFromType();
        met.setName(_strName);
        
        return met;
    }
    
    private void btnOpenResourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenResourceActionPerformed
        // TODO add your handling code here:
        this.frmParent.AbrirVentana("frmEditor", this._intID, this.getSelectedMethod(), false); 
    }//GEN-LAST:event_btnOpenResourceActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_btnExitActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteResource;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnOpenResource;
    private javax.swing.JButton btnSaveChanges;
    private javax.swing.JScrollPane jspResources;
    private javax.swing.JTable tblResources;
    // End of variables declaration//GEN-END:variables
}
