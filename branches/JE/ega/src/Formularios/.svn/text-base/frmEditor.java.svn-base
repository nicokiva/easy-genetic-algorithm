/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;
import Methods.Method;
import configuration.*;
import helpers.*;
import comp.Compilador;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.codehaus.commons.compiler.CompileException;

/**
 *
 * @author Triton
 */
public class frmEditor extends javax.swing.JInternalFrame {
    file_handler fh = new file_handler();
    Paths paths = new Paths();
    boolean Locally = true;
    ArrayList<Method> arrMethods = new ArrayList<Method>();
    int intLoading = 1;
    
    /**
     * Creates new form frmEditor
     */
    public frmEditor() {
        this.intLoading = 1;
        initComponents();
        this.intLoading = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fcSave = new javax.swing.JFileChooser();
        btnSave = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        CodigoUsuario = new javax.swing.JEditorPane();
        btnTestSyntax = new javax.swing.JButton();
        btnPublish = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblTipoFuncion = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtResultado = new javax.swing.JTextArea();
        bntAbrir = new javax.swing.JButton();

        fcSave.setCurrentDirectory(new java.io.File("C:\\"));

            setClosable(true);
            setIconifiable(true);
            setMaximizable(true);
            setResizable(true);
            setTitle("EGA - Editor de Funciones");
            setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ICON.png"))); // NOI18N

            btnSave.setText("Grabar");
            btnSave.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnSaveActionPerformed(evt);
                }
            });

            CodigoUsuario.setText("//  ESTA ES UNA PLANTILLA PARA METODOS DE SELEECION QUE LE OFRECE EGA\n//  LOS DATOS A COMPLETAR SON :\n// 1. Nombre de la Clase\n// 2. etc\n\n\npublic class MetodoSeleccionEventos \n{\n       // este método de selección funciona mejor que los estandares para el caso de eventos..\n      // tiene la particulairdad de que bla bla bla .....\n\n     public int iRetorno;\n     private int iMAX;\n     private string sCadena\n\n     initComponents();\n\n\n    public int metodoA (int param1, int param2, object cromosomas)\n   {\t\t\n\tobject Seleccionados;\n\n\t// seguir desarrollando....\n\n          \treturn Seleccionados\n   }\n\n\n    private object metodoB (object cromosomas)\n   {\t\t\n\tstring Cadena\n\t// acá bla bla bnla blaa....\n\t// seguir desarrollando....\n\n          \treturn Cadena\n   }\n\n} // FIN DE CLASE\n\n");
            CodigoUsuario.setToolTipText("");
            jScrollPane1.setViewportView(CodigoUsuario);

            btnTestSyntax.setText("Probar Sintáxis");
            btnTestSyntax.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnTestSyntaxActionPerformed(evt);
                }
            });

            btnPublish.setText("Publicar");
            btnPublish.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnPublishActionPerformed(evt);
                }
            });

            btnSalir.setText("Salir");
            btnSalir.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnSalirActionPerformed(evt);
                }
            });

            jLabel1.setText("Escriba aquí su código:");

            lblTipoFuncion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            lblTipoFuncion.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            lblTipoFuncion.setText("Cromosoma");
            lblTipoFuncion.setToolTipText("");

            txtResultado.setEditable(false);
            txtResultado.setColumns(20);
            txtResultado.setRows(5);
            txtResultado.setText(" RESULTADO COMPILACION:");
            jScrollPane2.setViewportView(txtResultado);

            bntAbrir.setText("Abrir");
            bntAbrir.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    bntAbrirActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 894, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblTipoFuncion))))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane2)))
                    .addContainerGap())
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(bntAbrir, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(btnTestSyntax, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(btnPublish, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(142, 142, 142))
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(lblTipoFuncion))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(btnTestSyntax)
                        .addComponent(btnSave)
                        .addComponent(btnPublish)
                        .addComponent(btnSalir)
                        .addComponent(bntAbrir))
                    .addContainerGap())
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void btnPublishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPublishActionPerformed
        // TODO add your handling code here:
        this.Locally = false;
        this.Save("C:\\");
    }//GEN-LAST:event_btnPublishActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnTestSyntaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestSyntaxActionPerformed
        
        try {
           
            Compilador.pruebaCompilacion(CodigoUsuario.getText());
        
        } catch (IOException ex) {
            Logger.getLogger(frmEditor.class.getName()).log(Level.SEVERE, ex.getMessage(), ex);
        } catch (CompileException ex) {
            txtResultado.setText("Errores: \n" + ex.getMessage());
            Logger.getLogger(frmEditor.class.getName()).log(Level.SEVERE, ex.getMessage(), ex);
        }
        txtResultado.setText("RESULTADO COMPILACION:\n\nCompilación correcta.. \n");
    }//GEN-LAST:event_btnTestSyntaxActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        this.Locally = true;
        this.Save(paths.strSeleccionMetodos);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void bntAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntAbrirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bntAbrirActionPerformed

    private void Save(String strFilePath){
        if (intLoading == 0){
            this.fh.setText(CodigoUsuario.getText());
            File file = new File(strFilePath);
            fcSave.setCurrentDirectory(file);
            String strPathFileToWrite = ChooseFile();
            this.fh.setPathFileToWrite(strPathFileToWrite);
            if (this.fh.Write()){
                this.StoreInDatabase(strPathFileToWrite);
                System.out.println(Messages.strElementSaved);
                //Va a ir un messagebox o algo similar.
            }else{
                System.out.println(Messages.strCouldNotSaved);
                //Va a ir un messagebox o algo similar.
            }
        }
    }
    
    public void StoreInDatabase(String strPathFileToWrite){
        data_type_converter dtc = new data_type_converter();

        fh.setPathFileToRead(paths.strSeleccionDB);
        if (fh.ReadBinary()){
            dtc.setByteText(fh.getByteText());
            dtc.fromByteToStringList();

            ArrayList<ArrayList<String>> strArrMethods = dtc.getStrArrText();
            for (ArrayList<String> strMethod : strArrMethods){
                Method met = new Method(
                    strMethod.get(0),
                    strMethod.get(1),
                    strMethod.get(2),
                    strMethod.get(3), 
                    Boolean.getBoolean(strMethod.get(4)), 
                    strMethod.get(5)
                );
                arrMethods.add(met);
            }
            Integer intLastIndex = Integer.parseInt(arrMethods.get(arrMethods.size() - 1).getIndex());
            arrMethods.add(new Method(Integer.toString(intLastIndex + 1), "Method Name", "Description", "Alias", this.Locally, strPathFileToWrite, (new Date()).toString(), (new Date()).toString()));
            dtc.setArrMethods(arrMethods);
            
            this.fh.setText(dtc.fromMethodToByteString());
            this.fh.setPathFileToWrite(paths.strSeleccionDB);    
            this.fh.WriteBinary();
        }
    }
    
    public String ChooseFile(){
        int returnVal = fcSave.showOpenDialog(this);
        if (returnVal == 0) {
            File file = fcSave.getSelectedFile();
            try {
                return file.getAbsolutePath();
                //jTextField1.read( new FileReader( file.getAbsolutePath() ), null );
            } catch (Exception ex) {
                System.out.println("problem accessing file" + file.getAbsolutePath());
                return "";
            }
        }
        return "";
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane CodigoUsuario;
    private javax.swing.JButton bntAbrir;
    private javax.swing.JButton btnPublish;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnTestSyntax;
    private javax.swing.JFileChooser fcSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblTipoFuncion;
    private javax.swing.JTextArea txtResultado;
    // End of variables declaration//GEN-END:variables
}
