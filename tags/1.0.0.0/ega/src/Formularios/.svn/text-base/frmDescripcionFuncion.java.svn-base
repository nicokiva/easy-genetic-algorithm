/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Methods.*;
import configuration.Messages;
import helpers.file_handler;
import java.util.ArrayList;
/**
 *
 * @author Triton
 */
public class frmDescripcionFuncion extends javax.swing.JInternalFrame {
    private Integer _intID;
    private Method _metTypeMethod;
    javax.swing.JInternalFrame frmOpener;
    private ArrayList<javax.swing.JInternalFrame> _arrMySon = new ArrayList<javax.swing.JInternalFrame>();
    MDI frmParent;
    /**
     * Creates new form frmDescripcionFuncion
     */
    public frmDescripcionFuncion() {
        initComponents();
    }
    
    public frmDescripcionFuncion(MDI frmParent, int intID, Method metTypeMethod) {
        this._intID = intID;
        this.frmParent = frmParent;
        this._metTypeMethod = metTypeMethod;
        initComponents();
        this.display();
    }
    
    private void display(){
        String strDescription = "";
        
        if (this._metTypeMethod.getName() != null && !this._metTypeMethod.getName().isEmpty())
            strDescription += (Messages.strMethodsDescriptionTemplate.replace("__TIT__", "NOMBRE")).replace("__DAT__", this._metTypeMethod.getName());
        
        if (this._metTypeMethod.getType() != null && !this._metTypeMethod.getType().isEmpty())
            strDescription += (Messages.strMethodsDescriptionTemplate.replace("__TIT__", "TIPO")).replace("__DAT__", this._metTypeMethod.getType());
        
        if (this._metTypeMethod.getDescription() != null && !this._metTypeMethod.getDescription().isEmpty())
            strDescription += (Messages.strMethodsDescriptionTemplate.replace("__TIT__", "DESCRIPCIÓN")).replace("__DAT__", this._metTypeMethod.getDescription());

        if (this._metTypeMethod.getAuthor() != null && !this._metTypeMethod.getAuthor().isEmpty())
            strDescription += (Messages.strMethodsDescriptionTemplate.replace("__TIT__", "AUTOR")).replace("__DAT__", this._metTypeMethod.getAuthor());

        if (this._metTypeMethod.getCreated() != null && !this._metTypeMethod.getCreated().isEmpty())
            strDescription += (Messages.strMethodsDescriptionTemplate.replace("__TIT__", "FECHA DE CREACIÓN")).replace("__DAT__", this._metTypeMethod.getCreated());

        if (this._metTypeMethod.getModified() != null && !this._metTypeMethod.getModified().isEmpty())
            strDescription += (Messages.strMethodsDescriptionTemplate.replace("__TIT__", "FECHA DE MODIFICACIÓN")).replace("__DAT__", this._metTypeMethod.getModified());

        if (this._metTypeMethod.getPath() != null && !this._metTypeMethod.getPath().isEmpty()){
            file_handler fh = new file_handler();
            strDescription += (Messages.strMethodsDescriptionTemplate.replace("__TIT__", "UBICACIÓN EN DISCO")).replace("__DAT__", this._metTypeMethod.getPath());
            strDescription += (fh.FileFound(this._metTypeMethod.getPath()) == file_handler._fileFound) ? Messages.strFileExists : Messages.strFileNotExists;
        }
        
        String strParamsDescription = "";
        for (Param param : this._metTypeMethod.getParams()){
            if (param.getName() != null && !param.getName().isEmpty() && param.getValue() != null && !param.getValue().isEmpty())
                strParamsDescription += "    " + (Messages.strMethodsDescriptionTemplate.replace("__TIT__", param.getName())).replace("__DAT__", param.getValue());
        }
        
        strDescription += !(strParamsDescription.isEmpty()) ? strParamsDescription : "";
        
        this.pnlDescripcion.setText(strDescription.toUpperCase());
    }
               
    public boolean CloseAll(){
        if(this.canCloseMe()){
            this.setVisible(false);
            this.dispose();
            return true;
        }
        return false;
    }
    
    private boolean canCloseMe(){
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        pnlDescripcion = new javax.swing.JTextPane();
        btnCerrar = new javax.swing.JButton();

        setClosable(true);
        setTitle("EGA - Descripción                                                                                                                                                                                ");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/system/res/ICON.png"))); // NOI18N

        pnlDescripcion.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        pnlDescripcion.setText("NOMBRE: Ranking\nTIPO: Operador de Selecion.\n\nDescripción: este operador sirve para algo...bla bla blas\n\n\nParámetros: el parametro CANTIDAD especifica cuántos individuos seleccionará el método.");
        pnlDescripcion.setCaretPosition(10);
        pnlDescripcion.setEnabled(false);
        pnlDescripcion.setMargin(new java.awt.Insets(10, 10, 10, 10));
        pnlDescripcion.setNextFocusableComponent(btnCerrar);
        jScrollPane1.setViewportView(pnlDescripcion);

        btnCerrar.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 667, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(296, 296, 296))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCerrar)
                .addGap(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        // TODO add your handling code here:
        this.closeMe();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void closeMe(){
        if (this.frmOpener != null){
            switch (this.frmOpener.getClass().toString().split("class Formularios.")[1]){
                case forms.Solucion:
                    ((frmSolucion)this.frmOpener).CloseSon(this);
                    break;
            }
        }
            
        this.setVisible(false);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane pnlDescripcion;
    // End of variables declaration//GEN-END:variables
}
